<?php
class Sms extends BaseModel {
    public function tableName()
    {
        return '{{sms_test}}'; // TODO: Change the autogenerated stub
    }
    /*** Returns the static model of the specified AR class. */
    public static function model($className = __CLASS__) {
        return parent::model($className);
    }
    /**  * 模型关联规则  */
    public function relations() {
        return array();
    }
    /*** 模型验证规则*/
    public function rules() {
      return $this->attributeRule();
    }
    /** * 属性标签 */
    public function attributeLabels() {
        return $this->getAttributeSet();
    }
    public function attributeSets() {
        return array(
        'SL_NO' => 'id',
        'SL_DATE' => '日期',
        'SL_SNO' => '接受学号',
        'SL_TNO' => '发送教师',
        'SL_PHONE' => '电话号码' ,
        'SL_SENDER' => '发送者',
        'SL_MSG' => '短信内容' ,
        'SL_PROCESSED' =>  '处理',//Y 完成
        );
     //x2_scourse,id,code,value,subjectsetting,subpic,id,x2_scourse;id;code;value;subjectsetting;subpic;id;
    }

  public function sendMsg(){ 
      $tmp=$this->findAll("SL_PROCESSED<>'Y' limit 10");
      foreach($tmp as $v)
        {
        //  $s2=$v->SL_PHONE;
          $s1=$this->sendMsging($v->SL_PHONE ,$v->SL_MSG);
          if (is_numeric($s1)){
            $v->SL_PROCESSED='Y';//发送送成功
            $v->save();
          }
      }
      return "send ok ";
    }


    public function sendMsging($Phones = '',$Content=''){ 
      if(substr($Phones,0,5)=="00853"){
        $Phones=substr($Phones,2);
      }
      if(!(substr($Phones,0,3)=="853")){
        $Phones='853'.$Phones;
      }
      $url = "https://emg.ctm-mobile.com:10081/servlet/SendSMS?username=houkong&password=houkong1029";
      $url .= "&from=100060128337956";
      $url .= "&to=".$Phones."&text=".$Content;
      return $this->httpCall($url);
     // echo $result;
     // $result = $this->httpCall($url);
     // echo $result;
    }


    function httpCall($url)
    {
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HEADER, 0);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);  // 跳过检查
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);  // 跳过检查
       // curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'POST');  // 跳过检查
     //   $d=array('content-type: application/x-www-form-urlencoded; charset=UTF-8');
       // curl_setopt($curl, CURLOPT_HTTPHEADER, $d);  // 跳过检查
        $tmpInfo = curl_exec($curl); 
        curl_close($curl);
        return $tmpInfo;   //返回json对象
    }
  /*  
  CURLOPT_CUSTOMREQUEST =>'POST",
  CURLOPT_HTTPHEADER =>array('content-type: application/x-www-form-urlencoded; charset=UTF-8'),
  curl_exec
   public function picLabels() {
        return 'coverImg';
    }  
   public  function pathLabels(){
       return 'articles';
   }
   'content-type: application/x-www-form-urlencoded; charset=UTF-8'),
  */
   /* 用于列表查询使用，三个参数分别是  1 条件 2 是排序 三是或取值，格式 变量[：变量]*/
   // public function keySelect(){
     //   return array('1','coed','value');
   // }
}
   